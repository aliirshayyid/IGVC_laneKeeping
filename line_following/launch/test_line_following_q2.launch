<?xml version="1.0"?>
<launch>

  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="footprint_to_optical" args="1.75 0.0 2.1 0.0 0.5 0.0 base_footprint lane_camera_optical" /> -->
  <!-- <node pkg="tf2_ros" type="static_transform_publisher" name="optical_to_camera" args="0 0 0 -1.57079632679 0 -1.57079632679 lane_camera_optical lane_camera" /> -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="footprint_to_optical" args="1.75 0      2.1     0       0.5   0.0    base_footprint camera_optical" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="optical_to_camera"    args="0.0  0.0    0.0   -1.5707  0.0   -1.5707 camera_optical camera" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="footprint_to_LIDAR"   args="1.75 0      2.1      0     0.2   0   base_footprint cepton" />



  <group ns="camera_front" >
    <!-- Process raw camera image and apply lens rectification -->
    <!-- <node pkg="image_proc" type="image_proc" name="image_proc" /> -->


    <!-- <include file="$(find camera_lidar_project)/launch/perception_sim.launch"> </include> -->
    <!-- Example node -->
    <!-- <node pkg="ece6460_lane_detection_example" type="lane_detection_example" name="lane_detection" output="screen" /> -->


  </group>

    <!-- Autonomy stack -->
    <node pkg="avs_lecture_maps" type="gps_frame_management.py" name="gps_frame_management" >
    <rosparam file="$(find igvc_self_drive_gazebo)/yaml/test_world.yaml" />
  <remap from ="/odom" to ="/filter_odom" /> 

    </node> 

  <node pkg="ece6460_ekf_example" type="ekf_example" name="ekf_example" output="screen" >
    <remap from="twist" to="/twist" />
    <remap from="fix" to="/fix" />
    <param name="ref_lat" value="42.679292" />
    <param name="ref_lon" value="-83.195249" />
  </node>


   <node pkg="line_following" type="line_following" name="line_following" output="screen" >
   <remap from ="/projected_lines" to ="camera_front/projected_lines" /> 

   </node>

   <!-- call the Gazebo World here  -->

   <include file="$(find igvc_self_drive_gazebo)/launch/q2_gazebo.launch"> </include>
   <!-- <node pkg="igvc_self_drive_gazebo" type="q2_gazebo" name="q2_gazebo" output="screen" /> PLEASE DELETE THIS -->
   <!-- ending of the call here  -->

  <include file="$(find ece6460_lane_detection_example)/launch/lane_detection.launch"> </include>

  <!-- <include file="$(find camera_lidar_project)/launch/perception_sim.launch"> </include>  -->
      

  <!-- Gazebo simulation -->
  <!--
  <arg name="headless" default="false" />
  <include file="$(find dataspeed_dbw_gazebo)/launch/dataspeed_dbw_gazebo.launch" >
    <arg name="sim_param_file" value="$(find avs_lecture_launch)/yaml/lane_keep_world_sim_params.yaml" />
    <arg name="world_name" value="$(find avs_lecture_gazebo)/worlds/lane_keep_world.world" />
    <arg name="headless" value="$(arg headless)" />
  </include>

  -->
  <!-- Rviz -->
  <!-- <node pkg="rviz" type="rviz" name="all_system_Gazebo" args="-d $(find ece6460_lane_detection_example)/rviz/all_system_Gazebo.rviz" /> -->
  
</launch>
